(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{201:function(e,t,s){e.exports=s.p+"assets/img/rancher-cluster-list.3ffbd7a2.png"},202:function(e,t,s){e.exports=s.p+"assets/img/get-kubeconfig.cf706e47.png"},203:function(e,t,s){e.exports=s.p+"assets/img/copy-kubeconfig.ba7c1047.png"},204:function(e,t,s){e.exports=s.p+"assets/img/telepresence-sessions.8ac77661.png"},210:function(e,t,s){"use strict";s.r(t);var a=s(0),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"telepresence-installation-and-configuration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#telepresence-installation-and-configuration","aria-hidden":"true"}},[e._v("#")]),e._v(" Telepresence Installation and Configuration")]),e._v(" "),a("p",[e._v("Telepresence provides a VPN solution into the Kubernetes cluster shich means developers can use the Internal Kubernetes DNS service to access resources running in the Cluster without the need for public ingress. This requires a simple setup script outlined below.")]),e._v(" "),a("h2",{attrs:{id:"prerequisites"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites","aria-hidden":"true"}},[e._v("#")]),e._v(" Prerequisites")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("A Github user with membership of the CroudTech organisation and access to the relevant Kubernetes cluster containing the resources to be accessed - this is typically the development cluster at "),a("code",[e._v("https://rancher2-staging.croud.tech")])])]),e._v(" "),a("li",[a("p",[e._v("Sudo level workstation privileges"),a("br"),e._v(" "),a("em",[e._v("This is usually the password used to login to the developer workstation (assuming admin level access).")])])])]),e._v(" "),a("h4",{attrs:{id:"macos"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#macos","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("em",[e._v("MACOS")])]),e._v(" "),a("p",[e._v("Homebrew is installed. If this does not exist (check by typing "),a("code",[e._v("brew")]),e._v(" into a terminal), homebrew can be installed by following the instructions here: "),a("a",{attrs:{href:"https://brew.sh/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://brew.sh/"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("h4",{attrs:{id:"ubuntu"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ubuntu","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("em",[e._v("UBUNTU")])]),e._v(" "),a("p",[a("strong",[e._v("Snap")]),e._v(" and "),a("strong",[e._v("Apt")]),e._v(" Package Managers are installed")]),e._v(" "),a("h2",{attrs:{id:"process"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#process","aria-hidden":"true"}},[e._v("#")]),e._v(" Process")]),e._v(" "),a("h3",{attrs:{id:"_1-install-kubectl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-install-kubectl","aria-hidden":"true"}},[e._v("#")]),e._v(" 1. Install kubectl")]),e._v(" "),a("p",[e._v("Kubectl must be installed on the development workstation, and the version installed must be within 1 minor version of the target cluster.")]),e._v(" "),a("h4",{attrs:{id:"macos-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#macos-2","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("em",[e._v("MACOS")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.10.3/bin/darwin/amd64/kubectl\nchmod +x ./kubectl\nsudo mv ./kubectl /usr/local/bin/kubectl\n")])])]),a("h4",{attrs:{id:"ubuntu-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ubuntu-2","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("em",[e._v("UBUNTU")])]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" snap "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" kubectl\n")])])]),a("h3",{attrs:{id:"_2-configure-kubectl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-configure-kubectl","aria-hidden":"true"}},[e._v("#")]),e._v(" 2. Configure kubectl")]),e._v(" "),a("p",[e._v("This assumes that a new installation of kubectl has occured, and no existing configuration files exist.")]),e._v(" "),a("p",[e._v("Create a kubectl config file in the following location:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("    ~/.kube/config\n")])])]),a("p",[e._v("To retrieve valid Kubeconfig file contents, access the rancher UI via the url")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://rancher2-staging.croud.tech",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://rancher2-staging.croud.tech"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("Login via Gitgub and select the Cluster to which VPN access is required from the list:")]),e._v(" "),a("p",[a("img",{attrs:{src:s(201),alt:"Rancher Homepage"}})]),e._v(" "),a("p",[e._v("From here select the "),a("code",[e._v("Kubeconfig file")]),e._v(" link:")]),e._v(" "),a("p",[a("img",{attrs:{src:s(202),alt:"View Kubeconfig"}})]),e._v(" "),a("p",[e._v("This will reveal a user specific Kubeconfig file:")]),e._v(" "),a("p",[a("img",{attrs:{src:s(203),alt:"Copy Kubeconfig"}})]),e._v(" "),a("p",[e._v("Copy the contents and paste into the file created in step 2, a valid file will resemble that shown below:")]),e._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" Config\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("clusters")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"development-croud"')]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("cluster")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("server")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"https://rancher2-staging.croud.tech/k8s/clusters/c-m67cb"')]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("api-version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" v1\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("users")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"<<YOUR_USER>>"')]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("user")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("token")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"<<YOUR_TOKEN>>"')]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("contexts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"development-croud"')]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("context")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("user")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"<<YOUR_USER>>"')]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("cluster")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"development-croud"')]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("current-context")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"development-croud"')]),e._v("\n")])])]),a("h3",{attrs:{id:"_3-install-telepresence"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-install-telepresence","aria-hidden":"true"}},[e._v("#")]),e._v(" 3. Install telepresence")]),e._v(" "),a("h4",{attrs:{id:"macos-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#macos-3","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("em",[e._v("MACOS")])]),e._v(" "),a("p",[e._v("Install telepresence from homebrew:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("brew cask install osxfuse\nbrew install datawire/blackbird/telepresence\n")])])]),a("h4",{attrs:{id:"ubuntu-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ubuntu-3","aria-hidden":"true"}},[e._v("#")]),e._v(" "),a("em",[e._v("UBUNTU")])]),e._v(" "),a("p",[e._v("Install telepresence via Ubuntu Package Manager:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$> sudo apt-get update\n$> sudo apt-get install telepresence\n")])])]),a("h3",{attrs:{id:"_4-connect-to-the-cluster-via-the-telepresence-vpn"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-connect-to-the-cluster-via-the-telepresence-vpn","aria-hidden":"true"}},[e._v("#")]),e._v(" 4. Connect to the Cluster via the Telepresence VPN")]),e._v(" "),a("p",[e._v("Telepresence will attempt to connect to the cluster currently assigned to  "),a("code",[e._v("current-context")]),e._v(" in the kubeconfig file from step 2.")]),e._v(" "),a("p",[e._v("Run the command below in the terminal:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" telepresence\n   \n")])])]),a("p",[e._v("After a moment the command prompt will return signifying that telepresence has connected.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("T: Warning: kubectl "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1.13")]),e._v(".3 may not work correctly with cluster version "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1.10")]),e._v(".6 \nT: due to the version discrepancy. See \nT: https://kubernetes.io/docs/setup/version-skew-policy/ "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("for")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("more")]),e._v(" information.   \nT: Starting proxy with method "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'vpn-tcp'")]),e._v(", "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("which")]),e._v(" has the following limitations: \nT: All processes are affected, only one telepresence can run per machine, and \nT: you can"),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'t use other VPNs. You may need to add cloud hosts and headless \nT: services with --also-proxy. For a full list of method limitations see \nT: https://telepresence.io/reference/methods.html\nT: Volumes are rooted at "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$TELEPRESENCE_ROOT")]),e._v(". See \nT: https://telepresence.io/howto/volumes.html for details.\nT: Starting network proxy to cluster using new Deployment \nT: telepresence-1550095525-2570639-5864   \nT: No traffic is being forwarded from the remote Deployment to your local \nT: machine. You can use the --expose option to specify which ports you want to \nT: forward.   \nT: Guessing that Services IP range is 100.64.0.0/13. Services started after \nT: this point will be inaccessible if are outside this range; restart \nT: telepresence if you can'")]),e._v("t access a new Service.\nT: Setup complete. Launching your command.\n\n@production-croud-eu-west-3"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("bash-4.4$ \n\n\n")])])]),a("p",[e._v("Services running within the cluster can now be accessed via the internal rancher DNS service, all requests made from the workstation will attempt to use the Rancher internal DNS")]),e._v(" "),a("pre",[a("code",[e._v("http://<<SERVICE>>.<<NAMESPACE>.svc.cluster.local\nhttp://<<SERVICE>>.<<NAMESPACE>\n")])]),e._v(" "),a("p",[e._v("Note that the IP addresses are likely to change frequently, so internal service URLs should be preferred.")]),e._v(" "),a("h3",{attrs:{id:"advanced-setup-proxying-traffic"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#advanced-setup-proxying-traffic","aria-hidden":"true"}},[e._v("#")]),e._v(" Advanced Setup - Proxying traffic")]),e._v(" "),a("p",[e._v("While the basic setup above can be used gain access to internal services running within the application cluster, Croud development environments are protected via an IP whitelist which requires additional cluster configuration to access over the public internet.  Telepresence can also be used to proxy traffic to specific destinations (IP address, IP Address range or Hostname) via the Telepresence VPN. This means that for developers working on these clusters with a telepresence connection, this additonal whitelisting is not necessary, this is acheived using one or more "),a("code",[e._v("--also-proxy")]),e._v(" arguments when opening the Telepresence connection.")]),e._v(" "),a("p",[e._v("For example the following command would proxy an public DNS request to the hostname "),a("strong",[e._v("myingress.example.com")]),e._v(" via the Telepresence VPN:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("telepresence --also-proxy myingress.example.com\n")])])]),a("div",{staticClass:"tip custom-block"},[a("p",[e._v("Use the following command to proxy all traffic to the Croud development load balancer via your Telepresence VPN connection. Replace "),a("strong",[e._v("myloadbalancer.development.example.com")]),e._v(" with the address of the load balancer you wish to proxy, ask the Croud DevOps team for this if you are unsure.")])]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("telepresence "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("dig")]),e._v(" A myloadbalancer.development.example.com "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("grep")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"IN A"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("awk")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('\'{print " --also-proxy " '),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$5")]),e._v("}'")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("ORS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('" "')]),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v("\n")])])]),a("h4",{attrs:{id:"explanation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#explanation","aria-hidden":"true"}},[e._v("#")]),e._v(" Explanation")]),e._v(" "),a("p",[e._v("The commands in the $() grab a list of all the A records for the load balancer hostname myloadbalancer.development.example.com (removing the need to manually add IP addresses if the load balancer changes) and adds them as "),a("code",[e._v("--also-proxy IP")]),e._v(" arguments for telepresence. So the above command actually runs:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("telepresence  --also-proxy "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("123.333")]),e._v(".222.1  --also-proxy "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("123.333")]),e._v(".222.2  --also-proxy "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("123.333")]),e._v(".222.3\n")])])]),a("p",[e._v("This will then send all internal kubernetes traffic and external ingress traffic through the telepresence VPN connection.")]),e._v(" "),a("h3",{attrs:{id:"_5-cleanup"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-cleanup","aria-hidden":"true"}},[e._v("#")]),e._v(" 5. Cleanup")]),e._v(" "),a("p",[e._v("The Telepresence connection creates a pod in the target cluster where the VPN terminates:")]),e._v(" "),a("p",[a("img",{attrs:{src:s(204),alt:"Telepresence Sessions"}})]),e._v(" "),a("p",[e._v("In order to ensure this is removed, the VPN session should be cleanly terminated by running the command below, this will trigger the running pod to be removed.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" @production-croud-eu-west-3"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v("bash-4.4$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("exit")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("exit")]),e._v("\nT: Your process has exited.\nT: Exit cleanup "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("in")]),e._v(" progress\nT: Cleaning up Deployment telepresence-1550096881-5661159-11605\n\n\n")])])]),a("h3",{attrs:{id:"_6-misc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-misc","aria-hidden":"true"}},[e._v("#")]),e._v(" 6. Misc.")]),e._v(" "),a("p",[e._v("Run the command below to explore options or consult the Telepresence docs")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" telepresence --help\n")])])]),a("p",[e._v("If multiple Clusters are configured in Kubeconfig then the desired cluster can be selected using the telepresence  "),a("code",[e._v("--context")]),e._v(" command line flag.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" telepresence --context CONTEXT_NAME\n")])])]),a("h3",{attrs:{id:"installation-help"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#installation-help","aria-hidden":"true"}},[e._v("#")]),e._v(" Installation Help")]),e._v(" "),a("p",[e._v("Kubernetes installation docs:")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://kubernetes.io/docs/tasks/tools/install-kubectl/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://kubernetes.io/docs/tasks/tools/install-kubectl/"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("Telepresence installation docs:")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://www.telepresence.io/reference/install",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.telepresence.io/reference/install"),a("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=n.exports}}]);