(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{216:function(e,t,o){"use strict";o.r(t);var i=o(0),s=Object(i.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"git-repositories"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#git-repositories","aria-hidden":"true"}},[e._v("#")]),e._v(" Git Repositories")]),e._v(" "),o("div",{staticClass:"tip custom-block"},[o("p",[e._v("The CroudTech codebase consists of a large number of code repositories that utilitise a wide variety of different languages, frameworks and platforms, as such a consistent naming scheme is essential for ongoing management and support. Each Git repository must be named according to the naming scheme outlined below")])]),e._v(" "),o("h2",{attrs:{id:"private-repositories"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#private-repositories","aria-hidden":"true"}},[e._v("#")]),e._v(" Private Repositories")]),e._v(" "),o("p",[e._v("All Croud Tech Git repositories containing any proprietary code, distinct Croud specific business logic or any other intellectual property should be placed in a private Git repository that follows the naming convention below:")]),e._v(" "),o("p",[e._v("Each private repository name consists of 3 distinct categories or sections")]),e._v(" "),o("h3",{attrs:{id:"naming-convention"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#naming-convention","aria-hidden":"true"}},[e._v("#")]),e._v(" Naming Convention")]),e._v(" "),o("p",[e._v("Each private Git repository name should consisty of "),o("strong",[e._v("at least")]),e._v(" three lower case segments joined using a hyphen/dash(-). Each segment is described below:")]),e._v(" "),o("p",[o("em",[e._v("First Segment")])]),e._v(" "),o("p",[e._v("This must be from a fixed set and indicate the "),o("em",[e._v("Category")]),e._v(" of the code contained, this must be one of the following:")]),e._v(" "),o("ul",[o("li",[o("p",[o("strong",[e._v("at")]),e._v(" - indicates this is an Agency Tool, while Tools can be used by clients other than the agency this segment should be used for all tool implementations")])]),e._v(" "),o("li",[o("p",[o("strong",[e._v("cc")]),e._v(" - indicates this is a component used witin the Croud Control platform")])]),e._v(" "),o("li",[o("p",[o("strong",[e._v("connect")]),e._v(" - indicates this is a component used witin the Croud Connect platform\na")])]),e._v(" "),o("li",[o("p",[o("strong",[e._v("devops")]),e._v(" - a tool or utility used to manage, configure or support one or more aspects of the CroudTech platform")])]),e._v(" "),o("li",[o("p",[o("strong",[e._v("legacy")]),e._v(" - indicates the repositorty contains code that is either deprecated or apporaching EOL")])]),e._v(" "),o("li",[o("p",[o("strong",[e._v("analytics")]),e._v(" - tool, application or service created and managed by the Croud Analytics team")])]),e._v(" "),o("li",[o("p",[o("strong",[e._v("services")]),e._v(" - a standalone component of the CroudTech platform, typically consumed by other applications (such as Croud Control) within the platform - these may or may not be Microservices and each service typically exposes a Rest API")])]),e._v(" "),o("li",[o("p",[o("strong",[e._v("lib")]),e._v(" - a shared component (library or utility) used by other applications via an inline dependency (c.f. services which are standalone applications)")])]),e._v(" "),o("li",[o("p",[o("strong",[e._v("npd")]),e._v(" - for all repositories created and developed as part of the NDP process")])])]),e._v(" "),o("p",[o("em",[e._v("NB if the list above does not meet your requrirements please consult the senior DevOps team, do not create a repo that does not begin with one of these values")])]),e._v(" "),o("p",[o("em",[e._v("Second Segment")])]),e._v(" "),o("p",[e._v("This is used to indiciate the main priniciple language or framework that the code is based on, in the case of language spcific frameworks then the language should be omitted (eg python-django => django, php-laravel => laravel), some exmaples are listed below:")]),e._v(" "),o("ul",[o("li",[o("p",[o("strong",[e._v("django")])])]),e._v(" "),o("li",[o("p",[o("strong",[e._v("laravel")])])]),e._v(" "),o("li",[o("p",[o("strong",[e._v("node")])])]),e._v(" "),o("li",[o("p",[o("strong",[e._v("vue")])])]),e._v(" "),o("li",[o("p",[o("strong",[e._v("rancher")])])]),e._v(" "),o("li",[o("p",[o("strong",[e._v("graphql")]),e._v(" (see above)")])])]),e._v(" "),o("p",[o("em",[e._v("Remaining Segments")])]),e._v(" "),o("p",[e._v("The remaining one (or more) segments should be a "),o("strong",[e._v("concise")]),e._v(" lowercase, kebab-cased description of the purpose of the repo, this should be as few words as possible while still giving an indication as to the purpose of the repository.")]),e._v(" "),o("p",[o("em",[e._v("Examples")])]),e._v(" "),o("ul",[o("li",[o("p",[e._v("cc-laravel-workflow")])]),e._v(" "),o("li",[o("p",[e._v("connect-vue-ui-kit")])]),e._v(" "),o("li",[o("p",[e._v("services-node-notifications")])]),e._v(" "),o("li",[o("p",[e._v("at-django-ppc-bid-change-alerts")])])]),e._v(" "),o("h3",{attrs:{id:"repository-structure"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#repository-structure","aria-hidden":"true"}},[e._v("#")]),e._v(" Repository Structure")]),e._v(" "),o("p",[e._v("Each GitHub repository must feature a short description of the purpose using the GitHib native repository functionality and no be left as (the default):")]),e._v(" "),o("p",[o("code",[e._v("No description, website, or topics provided.")])]),e._v(" "),o("h2",{attrs:{id:"public"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#public","aria-hidden":"true"}},[e._v("#")]),e._v(" Public")]),e._v(" "),o("p",[e._v("TODO")]),e._v(" "),o("h2",{attrs:{id:"restricted"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#restricted","aria-hidden":"true"}},[e._v("#")]),e._v(" Restricted")]),e._v(" "),o("p",[e._v("TODO")])])}),[],!1,null,null,null);t.default=s.exports}}]);